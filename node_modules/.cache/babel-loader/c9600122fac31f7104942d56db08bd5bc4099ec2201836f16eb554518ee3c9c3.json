{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\library_manager\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LoginPage from './components/LoginPage';\nimport OwnerDashboard from './components/OwnerDashboard';\nimport UserDashboard from './components/UserDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n  const [books, setBooks] = useState([]);\n  const [transactions, setTransactions] = useState([]);\n  const [userBooks, setUserBooks] = useState([]);\n  const [userTransactions, setUserTransactions] = useState([]);\n  useEffect(() => {\n    const userData = localStorage.getItem('user');\n    if (userData) {\n      const parsedUser = JSON.parse(userData);\n      setUser(parsedUser);\n      setIsLoggedIn(true);\n      loadData(parsedUser);\n    }\n  }, []);\n  const loadData = async currentUser => {\n    setLoading(true);\n    try {\n      // Fetch Books\n      const booksResponse = await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'read',\n          collection: 'books'\n        })\n      });\n      const booksData = await booksResponse.json();\n      if (booksData.success) {\n        setBooks(booksData.result);\n      }\n\n      // Fetch Transactions\n      const transactionsResponse = await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'read',\n          collection: 'transactions',\n          conditions: currentUser.role === 'user' ? {\n            userId: currentUser._id\n          } : {}\n        })\n      });\n      const transactionsData = await transactionsResponse.json();\n      if (transactionsData.success) {\n        if (currentUser.role === 'user') {\n          setUserTransactions(transactionsData.result);\n        } else {\n          setTransactions(transactionsData.result);\n        }\n      }\n\n      // Fetch User Books (for user role)\n      if (currentUser.role === 'user') {\n        const userBooksResponse = await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n          method: 'POST',\n          headers: {\n            'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            appSlug: 'library-manager-123456',\n            action: 'read',\n            collection: 'borrowed_books',\n            conditions: {\n              userId: currentUser._id\n            }\n          })\n        });\n        const userBooksData = await userBooksResponse.json();\n        if (userBooksData.success) {\n          setUserBooks(userBooksData.result);\n        }\n      }\n    } catch (error) {\n      console.error('Load data error:', error);\n      alert('Failed to load data');\n    }\n    setLoading(false);\n  };\n  const login = async loginForm => {\n    setLoading(true);\n    try {\n      const response = await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'read',\n          collection: 'users',\n          conditions: loginForm\n        })\n      });\n      const data = await response.json();\n      if (data.success && data.result.length > 0) {\n        const loggedInUser = data.result[0];\n        setUser(loggedInUser);\n        localStorage.setItem('user', JSON.stringify(loggedInUser));\n        setIsLoggedIn(true);\n        loadData(loggedInUser);\n      } else {\n        alert('Invalid credentials');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      alert('Login failed');\n    }\n    setLoading(false);\n  };\n  const signup = async signupForm => {\n    setLoading(true);\n    try {\n      const response = await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'create',\n          collection: 'users',\n          data: signupForm\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        const newUser = {\n          ...signupForm,\n          _id: data.result.insertedId\n        };\n        setUser(newUser);\n        localStorage.setItem('user', JSON.stringify(newUser));\n        setIsLoggedIn(true);\n        loadData(newUser);\n      }\n    } catch (error) {\n      console.error('Signup error:', error);\n      alert('Signup failed');\n    }\n    setLoading(false);\n  };\n  const logout = () => {\n    setIsLoggedIn(false);\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n  const addBook = async newBook => {\n    setLoading(true);\n    try {\n      const response = await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'create',\n          collection: 'books',\n          data: newBook\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        loadData(user);\n      }\n    } catch (error) {\n      console.error('Add book error:', error);\n      alert('Failed to add book');\n    }\n    setLoading(false);\n  };\n  const deleteBook = async bookId => {\n    setLoading(true);\n    try {\n      const response = await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'delete',\n          collection: 'books',\n          id: bookId\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        loadData(user);\n      }\n    } catch (error) {\n      console.error('Delete book error:', error);\n      alert('Failed to delete book');\n    }\n    setLoading(false);\n  };\n  const borrowBook = async bookId => {\n    setLoading(true);\n    try {\n      const book = books.find(b => b._id === bookId);\n      await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'update',\n          collection: 'books',\n          id: bookId,\n          data: {\n            quantity: book.quantity - 1\n          }\n        })\n      });\n      await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'create',\n          collection: 'borrowed_books',\n          data: {\n            userId: user._id,\n            bookId: bookId,\n            title: book.title,\n            author: book.author\n          }\n        })\n      });\n      await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'create',\n          collection: 'transactions',\n          data: {\n            userId: user._id,\n            userName: user.name,\n            bookId: bookId,\n            bookTitle: book.title,\n            action: 'borrowed',\n            date: new Date()\n          }\n        })\n      });\n      loadData(user);\n    } catch (error) {\n      console.error('Borrow book error:', error);\n      alert('Failed to borrow book');\n    }\n    setLoading(false);\n  };\n  const returnBook = async bookId => {\n    setLoading(true);\n    try {\n      const book = books.find(b => b._id === bookId);\n      await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'update',\n          collection: 'books',\n          id: bookId,\n          data: {\n            quantity: book.quantity + 1\n          }\n        })\n      });\n      await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'delete',\n          collection: 'borrowed_books',\n          conditions: {\n            userId: user._id,\n            bookId: bookId\n          }\n        })\n      });\n      await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'create',\n          collection: 'transactions',\n          data: {\n            userId: user._id,\n            userName: user.name,\n            bookId: bookId,\n            bookTitle: book.title,\n            action: 'returned',\n            date: new Date()\n          }\n        })\n      });\n      loadData(user);\n    } catch (error) {\n      console.error('Return book error:', error);\n      alert('Failed to return book');\n    }\n    setLoading(false);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-white text-2xl\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(LoginPage, {\n      login: login,\n      signup: signup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: user.role === 'owner' ? /*#__PURE__*/_jsxDEV(OwnerDashboard, {\n      user: user,\n      logout: logout,\n      books: books,\n      transactions: transactions,\n      addBook: addBook,\n      deleteBook: deleteBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(UserDashboard, {\n      user: user,\n      logout: logout,\n      books: books,\n      userBooks: userBooks,\n      userTransactions: userTransactions,\n      borrowBook: borrowBook,\n      returnBook: returnBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 365,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RA+kqSB8FSCL5XzPNymbI+tI9i0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","LoginPage","OwnerDashboard","UserDashboard","jsxDEV","_jsxDEV","App","_s","loading","setLoading","isLoggedIn","setIsLoggedIn","user","setUser","books","setBooks","transactions","setTransactions","userBooks","setUserBooks","userTransactions","setUserTransactions","userData","localStorage","getItem","parsedUser","JSON","parse","loadData","currentUser","booksResponse","fetch","method","headers","body","stringify","appSlug","action","collection","booksData","json","success","result","transactionsResponse","conditions","role","userId","_id","transactionsData","userBooksResponse","userBooksData","error","console","alert","login","loginForm","response","data","length","loggedInUser","setItem","signup","signupForm","newUser","insertedId","logout","removeItem","addBook","newBook","deleteBook","bookId","id","borrowBook","book","find","b","quantity","title","author","userName","name","bookTitle","date","Date","returnBook","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/projects/library_manager/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LoginPage from './components/LoginPage';\nimport OwnerDashboard from './components/OwnerDashboard';\nimport UserDashboard from './components/UserDashboard';\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n  const [books, setBooks] = useState([]);\n  const [transactions, setTransactions] = useState([]);\n  const [userBooks, setUserBooks] = useState([]);\n  const [userTransactions, setUserTransactions] = useState([]);\n\n  useEffect(() => {\n    const userData = localStorage.getItem('user');\n    if (userData) {\n      const parsedUser = JSON.parse(userData);\n      setUser(parsedUser);\n      setIsLoggedIn(true);\n      loadData(parsedUser);\n    }\n  }, []);\n\n  const loadData = async (currentUser) => {\n    setLoading(true);\n    try {\n      // Fetch Books\n      const booksResponse = await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'read',\n          collection: 'books'\n        })\n      });\n      const booksData = await booksResponse.json();\n      if (booksData.success) {\n        setBooks(booksData.result);\n      }\n\n      // Fetch Transactions\n      const transactionsResponse = await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'read',\n          collection: 'transactions',\n          conditions: currentUser.role === 'user' ? { userId: currentUser._id } : {}\n        })\n      });\n      const transactionsData = await transactionsResponse.json();\n      if (transactionsData.success) {\n        if (currentUser.role === 'user') {\n          setUserTransactions(transactionsData.result);\n        } else {\n          setTransactions(transactionsData.result);\n        }\n      }\n\n      // Fetch User Books (for user role)\n      if (currentUser.role === 'user') {\n        const userBooksResponse = await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n          method: 'POST',\n          headers: {\n            'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            appSlug: 'library-manager-123456',\n            action: 'read',\n            collection: 'borrowed_books',\n            conditions: { userId: currentUser._id }\n          })\n        });\n        const userBooksData = await userBooksResponse.json();\n        if (userBooksData.success) {\n          setUserBooks(userBooksData.result);\n        }\n      }\n    } catch (error) {\n      console.error('Load data error:', error);\n      alert('Failed to load data');\n    }\n    setLoading(false);\n  };\n\n  const login = async (loginForm) => {\n    setLoading(true);\n    try {\n      const response = await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'read',\n          collection: 'users',\n          conditions: loginForm\n        })\n      });\n      const data = await response.json();\n      if (data.success && data.result.length > 0) {\n        const loggedInUser = data.result[0];\n        setUser(loggedInUser);\n        localStorage.setItem('user', JSON.stringify(loggedInUser));\n        setIsLoggedIn(true);\n        loadData(loggedInUser);\n      } else {\n        alert('Invalid credentials');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      alert('Login failed');\n    }\n    setLoading(false);\n  };\n\n  const signup = async (signupForm) => {\n    setLoading(true);\n    try {\n      const response = await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'create',\n          collection: 'users',\n          data: signupForm\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        const newUser = { ...signupForm, _id: data.result.insertedId };\n        setUser(newUser);\n        localStorage.setItem('user', JSON.stringify(newUser));\n        setIsLoggedIn(true);\n        loadData(newUser);\n      }\n    } catch (error) {\n      console.error('Signup error:', error);\n      alert('Signup failed');\n    }\n    setLoading(false);\n  };\n\n  const logout = () => {\n    setIsLoggedIn(false);\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  const addBook = async (newBook) => {\n    setLoading(true);\n    try {\n      const response = await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'create',\n          collection: 'books',\n          data: newBook\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        loadData(user);\n      }\n    } catch (error) {\n      console.error('Add book error:', error);\n      alert('Failed to add book');\n    }\n    setLoading(false);\n  };\n\n  const deleteBook = async (bookId) => {\n    setLoading(true);\n    try {\n      const response = await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'delete',\n          collection: 'books',\n          id: bookId\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        loadData(user);\n      }\n    } catch (error) {\n      console.error('Delete book error:', error);\n      alert('Failed to delete book');\n    }\n    setLoading(false);\n  };\n\n  const borrowBook = async (bookId) => {\n    setLoading(true);\n    try {\n      const book = books.find(b => b._id === bookId);\n      await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'update',\n          collection: 'books',\n          id: bookId,\n          data: { quantity: book.quantity - 1 }\n        })\n      });\n\n      await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'create',\n          collection: 'borrowed_books',\n          data: {\n            userId: user._id,\n            bookId: bookId,\n            title: book.title,\n            author: book.author\n          }\n        })\n      });\n\n      await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'create',\n          collection: 'transactions',\n          data: {\n            userId: user._id,\n            userName: user.name,\n            bookId: bookId,\n            bookTitle: book.title,\n            action: 'borrowed',\n            date: new Date()\n          }\n        })\n      });\n\n      loadData(user);\n    } catch (error) {\n      console.error('Borrow book error:', error);\n      alert('Failed to borrow book');\n    }\n    setLoading(false);\n  };\n\n  const returnBook = async (bookId) => {\n    setLoading(true);\n    try {\n      const book = books.find(b => b._id === bookId);\n      await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'update',\n          collection: 'books',\n          id: bookId,\n          data: { quantity: book.quantity + 1 }\n        })\n      });\n\n      await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'delete',\n          collection: 'borrowed_books',\n          conditions: {\n            userId: user._id,\n            bookId: bookId\n          }\n        })\n      });\n\n      await fetch('https://r0c8kgwocscg8gsokogwwsw4.zetaverse.one/mongodb', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer rr6bqil5mbXq0drB0ABahp2I76B2',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          appSlug: 'library-manager-123456',\n          action: 'create',\n          collection: 'transactions',\n          data: {\n            userId: user._id,\n            userName: user.name,\n            bookId: bookId,\n            bookTitle: book.title,\n            action: 'returned',\n            date: new Date()\n          }\n        })\n      });\n\n      loadData(user);\n    } catch (error) {\n      console.error('Return book error:', error);\n      alert('Failed to return book');\n    }\n    setLoading(false);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"loading\">\n        <div className=\"text-white text-2xl\">Loading...</div>\n      </div>\n    );\n  }\n\n  if (!isLoggedIn) {\n    return <LoginPage login={login} signup={signup} />;\n  }\n\n  return (\n    <div className=\"p-4\">\n      {user.role === 'owner' ? (\n        <OwnerDashboard \n          user={user} \n          logout={logout} \n          books={books} \n          transactions={transactions} \n          addBook={addBook} \n          deleteBook={deleteBook} \n        />\n      ) : (\n        <UserDashboard \n          user={user} \n          logout={logout} \n          books={books} \n          userBooks={userBooks} \n          userTransactions={userTransactions} \n          borrowBook={borrowBook} \n          returnBook={returnBook} \n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}